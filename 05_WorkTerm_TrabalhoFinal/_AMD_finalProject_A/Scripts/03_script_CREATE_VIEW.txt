\set dataBase fpa_db
;
\set userName postgres
;
\connect :dataBase :userName
;

-- additional information about "client_encoding" in:
-- http://www.postgresql.org/docs/9.6/static/multibyte.html
\encoding WIN1250
;

DROP VIEW IF EXISTS fpa_3RowHeader;
DROP VIEW IF EXISTS fpa_view;

CREATE VIEW fpa_view ( age, tearRate, isMyope, isAstigmatic, isHypermetrope, prescribedLenses ) AS
SELECT age, tearRate, isMyope, isAstigmatic, isHypermetrope, prescribedLenses
FROM DIAGNOSTIC, DISEASE, TREATS
WHERE diagnosticId = DIAGNOSTIC.id and diseaseId = DISEASE.id
ORDER BY age DESC, tearRate ASC, prescribedLenses ASC
;

CREATE VIEW fpa_3RowHeader ( age, tearRate, isMyope, isAstigmatic, isHypermetrope, prescribedLenses ) AS
SELECT 'discrete', 'discrete', 'discrete', 'discrete', 'discrete', 'discrete'
UNION ALL
SELECT '', '', '', '', '', 'class'
UNION ALL
SELECT age, tearRate, CAST(isMyope AS VARCHAR), CAST(isAstigmatic AS VARCHAR), CAST(isHypermetrope AS VARCHAR), CAST(prescribedLenses AS VARCHAR) FROM fpa_view
;

/*
-- complete the following view in order to build
-- the output data presented below at [OUT]
CREATE VIEW v1( my_order, VC1, VC2, VC3 ) AS
SELECT 3, r2.c1 AS vc1, r3.c1_r1 AS vc2, r3.c1 AS vc3
FROM R2 r2, R3 r3
WHERE r2.c1_r1 = r3.c1_r1
;



-- after completing the previous code uncomment the following 2 lines
SELECT VC1, VC2, VC3
FROM v1
;



--==========================
-- [OUT] The expected output
--==========================

--| vc1 | vc2 |    vc3
--|-----+-----+------------
--| 111 |   1 | 2012-01-31
--| 111 |   1 | 2012-02-28
--| 222 |   2 | 2012-03-31
--|(3 rows)


-- 3 b)

CREATE VIEW v1_domain( my_order, VC1, VC2, VC3 ) AS
SELECT 1, 'discrete', 'discrete', 'discrete'
;

-- 3 c)

SELECT my_order, VC1, CAST(VC2 AS VARCHAR), CAST(VC3 AS VARCHAR) FROM v1
UNION ALL
SELECT my_order, VC1, VC2, VC3 FROM v1_domain
ORDER BY my_order
;

-- Follow the "practiceGuide.pdf" until arriving at this goal:
-- create the "dataset view" compatible with the Orange "3-Row-Header" format
CREATE VIEW v1_dataset( my_order, VC1, VC2, VC3 ) AS
SELECT my_order, VC1, CAST(VC2 AS VARCHAR), CAST(VC3 AS VARCHAR) FROM v1
UNION ALL
SELECT my_order, VC1, VC2, VC3 FROM v1_domain
ORDER BY my_order
;

-- 4 c)

CREATE VIEW v1_class( my_order, VC1, VC2, VC3 ) AS
SELECT 2, '', '', 'class'
;

-- 4 d)

SELECT my_order, VC1, CAST(VC2 AS VARCHAR), CAST(VC3 AS VARCHAR) FROM v1
UNION ALL
SELECT my_order, VC1, VC2, VC3 FROM v1_domain
UNION ALL
SELECT my_order, VC1, VC2, VC3 FROM v1_class
ORDER BY my_order
;

DROP VIEW IF EXISTS v1_dataset;

CREATE VIEW v1_dataset( my_order, VC1, VC2, VC3 ) AS
(SELECT my_order, VC1, CAST(VC2 AS VARCHAR), CAST(VC3 AS VARCHAR) FROM v1 ORDER BY VC1 DESC, VC3 ASC)
UNION ALL
(SELECT my_order, VC1, VC2, VC3 FROM v1_domain)
UNION ALL
(SELECT my_order, VC1, VC2, VC3 FROM v1_class)
ORDER BY my_order
;

\set filePath 'v1_dataset.txt'
\o :filePath
COPY (SELECT VC1, VC2, VC3 FROM v1_dataset)
TO STDOUT
WITH ( FORMAT CSV, HEADER TRUE, DELIMITER E'\t', QUOTE ' ')
;
\o :STDOUT

-- 5

CREATE VIEW v2_attrType( my_order, VC1, VC2, VC3 ) AS
SELECT 1, 'D#VC1', 'D#VC2', 'Dc#VC3'
;


-- Follow the "practiceGuide.pdf" until arriving at this goal:
-- create the "dataset view" compatible with the Orange "Header-with-Attribute-Type" format
CREATE VIEW v2_dataset( my_order, VC1, VC2, VC3 ) AS
(SELECT my_order, VC1, CAST(VC2 AS VARCHAR), CAST(VC3 AS VARCHAR) FROM v1 ORDER BY VC1 DESC, VC3 ASC)
UNION ALL
(SELECT my_order, VC1, VC2, VC3 FROM v2_attrType)
ORDER BY my_order
;

\set filePath 'v2_dataset.txt'
\o :filePath
COPY (SELECT VC1, VC2, VC3 FROM v2_dataset)
TO STDOUT
WITH ( FORMAT CSV, DELIMITER E'\t' )
;
\o :STDOUT
*/

